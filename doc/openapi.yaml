openapi: "3.0.0"
info:
  version: 1.0.0
  title: Book Searcher
  description: You can search for books' info
servers:
  - url: https://booksearcher.codemonkey.zone
  - url: https://booksearchercanary.codemonkey.zone
paths:
  /actuator/health:
    get:
      summary: SpringBoot's health check end point
      responses:
        '200':
          description: Shows application health information.

  /books/{isbn}:
    get:
      security:
        - ApiKeyAuth: []
      summary: Info for books
      tags:
        - book
      parameters:
        - name: isbn
          description: isbn10 or isbn13
          in: path
          required: true
          style: simple
          schema:
            type: string
          example: 0375725784,9780375725784
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BooksSearchBody"
        '400':
          description: Bad request. isbn must be composed of delimiter comma and isbns.
        '401':
           $ref: "#/components/responses/UnauthorizedError"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /airtable/books/{isbn}:
    post:
      security:
        - ApiKeyAuth: []
      summary: save boos to airtable
      tags:
        - book
      parameters:
        - name: isbn
          description: isbn10 or isbn13
          in: path
          required: true
          style: simple
          schema:
            type: string
          example: 0375725784,9780375725784
        - name: airtableApiKey
          description: api key from provided by AirTable
          in: header
          required: true
          schema:
            type: string
        - name: apiUrl
          description: the entire url provided by AirTable
          in: query
          required: true
          schema:
            type: string
      requestBody:
        description: name of columns needed to save the books to corresponding slot
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BookColumnName"
      responses:
        '200':
          description: Save books to Airtable successfully
          content:
            application/json:
              schema:
                type: object
                description: the response from AirTable
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        '401':
           $ref: "#/components/responses/UnauthorizedError"
components:
  responses:
    UnauthorizedError:
      description: API key is missing or invalid
  securitySchemes:
    ApiKeyAuth:        # arbitrary name for the security scheme
      type: apiKey
      in: header       # can be "header", "query" or "cookie"
      name: X-API-KEY  # name of the header, query parameter or cookie
  schemas:
    Book:
      properties:
        isbn13:
          type: string
          minLength: 13
          maxLength: 13
        isbn10:
          type: string
          minLength: 10
          maxLength: 10
        title:
          type: string
        originalTile:
          type: string
        pages:
          type: integer
        author:
          type: string
        publishDate:
          type: string
          format: date
          description: https://swagger.io/docs/specification/data-models/data-types/#string
        publisher:
          type: string

    BooksSearchBody:
      description: A object containing books foound information
      properties:
        found:
          type: integer
        notFound:
          type: integer
        notFoundList:
          type: array
          items:
            type: string
        booksFoundList:
          type: array
          items:
            $ref: "#/components/schemas/Book"
    BookColumnName:
      properties:
        isbn13:
          type: string
        isbn10:
          type: string
        title:
          type: string
        originalTile:
          type: string
        pages:
          type: string
        author:
          type: string
        publishDate:
          type: string
        publisher:
          type: string

    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string