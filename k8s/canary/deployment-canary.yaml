apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: booksearcher-canary
  labels:
    app: booksearcher
spec:
  template:
    metadata:
      labels:
        app: booksearcher
    spec:
      containers:
        - name: app
          image: booksearcher:1.0.0
          ports:
            - containerPort: 8080
#          readinessProbe:
#            httpGet:
#                path: /canary/healthcheck
#                port: 8080
#            initialDelaySeconds: 60
#            periodSeconds: 10
#          livenessProbe:
#            httpGet:
#                path: /canary/healthcheck
#                port: 8080
#            initialDelaySeconds: 70
#            periodSeconds: 20
          # The following environment variables will contain the database host,
          # user and password to connect to the PostgreSQL instance.
          env:
            - name: POSTGRES_DB_HOST
              value: 127.0.0.1:5432
            # [START cloudsql_secrets]
            - name: POSTGRES_DB_USER
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: username
            - name: POSTGRES_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: password
            - name: PLATFORM
              valueFrom:
                configMapKeyRef:
                  # The ConfigMap containing the value you want to assign to PLATFORM
                  name: application-properties-platforms
                  # Specify the key associated with the value
                  key: production
            # [END cloudsql_secrets]
        # Change <INSTANCE_CONNECTION_NAME> here to include your GCP
        # project, the region of your Cloud SQL instance and the name
        # of your Cloud SQL instance. The format is
        # $PROJECT:$REGION:$INSTANCE
        # [START proxy_container]
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.11
          command: ["/cloud_sql_proxy",
                    "-instances=my-tw-zone-project:asia-east1:postgres-dev=tcp:5432",
                    "-credential_file=/secrets/cloudsql/credentials.json"]
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql
              readOnly: true
        # [END proxy_container]
      # [START volumes]
      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
      # [END volumes]